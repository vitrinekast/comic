.page {
  color: $color--text;
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: calc(100svw - #{$page--padding * 2});
  height: 100%;
  margin: 0 auto;
  padding-top: #{$page--padding * 2};  
  padding-bottom: #{$page--padding * 2};  

  &:has(.frame--scroller) {
    overflow: scroll;
    display: block;
  }

  @include break($break--mobile) {
    padding: 0;
    padding-top: #{$page--padding * .5};  
    padding-bottom: #{$page--padding * .5};  
    max-width: calc(100svw - #{$page--padding * 0.5});
  }

  .page {
    padding: 0 0;
    min-height: auto;
    margin-bottom: unset;
    max-height: auto;
  }

  .grid,
  .page:not(.page--fit) {
    align-self: stretch;
  }

  &--sm {
    @extend .page;
  }

  &--spread {
    @extend .page;
    gap: $grid--gap * 2;

    &>.page {
      flex-basis: 50%;
      height: 100%;
      max-width: 50%;
    }

    @media screen and (max-height: 800px) {
      gap: 2rem;
    }

    @include break($break--mobile) {
      padding: 1rem;
      min-height: 100svh;
      flex-direction: column;
      gap: 0;

      .page {
        flex-basis: 100%;
      }
    }
  }


  &--fit {
    align-self: center;
    height: auto;
    @media screen and (min-width: 800px) {
      aspect-ratio: 148 / 210;
    }

  }

  &--fit-fill {
    padding: 0 0;
  }

  &--fixed {
    position: fixed;
    width: 100%;
    height: 100%;
    max-width: 100%;
     & > .container {
      height: 100%;
     }
  }

  &--fullwidth {
    @extend .page;
    padding: 0 0;
    height: auto;

    @include break($break--mobile) {
      max-width: 100% !important;
    }
  
  }

  //   page specific layouts
  &--3 {
    .frame__asset {
      max-height: 30vh;
    }
  }
}